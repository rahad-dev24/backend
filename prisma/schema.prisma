// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  first_name String
  last_name  String
  email      String    @unique
  address    String
  phone      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  products   Product[]

  @@unique([email, id])
}

model Category {
  id            String    @id @default(cuid())
  category_name String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  product       Product[]
}

enum Rent_option {
  Hour
  Day
  Month
}

enum Product_state {
  AvailableForRent
  UnavailableForRent
}

model Product {
  id                          String                        @id @default(cuid())
  user_id                     String
  User                        User                          @relation(fields: [user_id], references: [id])
  product_name                String
  description                 String
  price                       Float
  rent_price                  Float
  rent_option                 Rent_option                   @default(Day)
  product_state               Product_state                 @default(AvailableForRent)
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @default(now())
  categories                  Category[]
  product_transaction_history Product_transaction_history[]
  product_rental_history      Product_rental_history[]
}

model Product_transaction_history {
  id         String   @id @default(cuid())
  seller_id  String
  buyer_id   String
  product_id String
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

model Product_rental_history {
  id           String   @id @default(cuid())
  product_id   String
  lenter_id    String
  borrower_id  String
  rented_price Float
  rentedAt     String
  returnedAt   String
  product      Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}
